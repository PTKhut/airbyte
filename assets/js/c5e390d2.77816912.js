"use strict";(self.webpackChunkdocu=self.webpackChunkdocu||[]).push([[84024],{92666:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=n(87462),i=(n(67294),n(3905));const r={},o="Connector Metadata.yaml File",s={unversionedId:"connector-development/connector-metadata-file",id:"connector-development/connector-metadata-file",title:"Connector Metadata.yaml File",description:"The metadata.yaml file is a new addition to Airbyte's connector folders. This file is created with the goal of simplifying and enhancing how we manage information related to each connector. It is designed to replace the previous sourcedefinitions.yaml and destinationsdefinitions.yaml files.",source:"@site/../docs/connector-development/connector-metadata-file.md",sourceDirName:"connector-development",slug:"/connector-development/connector-metadata-file",permalink:"/connector-development/connector-metadata-file",draft:!1,editUrl:"https://github.com/airbytehq/airbyte/blob/master/docs/../docs/connector-development/connector-metadata-file.md",tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"Schema Reference",permalink:"/connector-development/schema-reference"},next:{title:"Best Practices",permalink:"/connector-development/best-practices"}},l={},c=[{value:"Structure",id:"structure",level:2},{value:"The <code>registries</code> Section",id:"the-registries-section",level:2},{value:"Structure",id:"structure-1",level:3},{value:"Updating Registries",id:"updating-registries",level:3},{value:"The <code>tags</code> Section",id:"the-tags-section",level:2},{value:"The <code>icon</code> Field",id:"the-icon-field",level:2},{value:"Future Plans",id:"future-plans",level:3},{value:"The <code>releases</code> Section",id:"the-releases-section",level:2},{value:"<code>breakingChanges</code>",id:"breakingchanges",level:3}],d={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"connector-metadatayaml-file"},"Connector Metadata.yaml File"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata.yaml")," file is a new addition to Airbyte's connector folders. This file is created with the goal of simplifying and enhancing how we manage information related to each connector. It is designed to replace the previous ",(0,i.kt)("inlineCode",{parentName:"p"},"source_definitions.yaml")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"destinations_definitions.yaml")," files."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata.yaml")," file contains crucial information about the connector, including its type, definition ID, Docker image tag, Docker repository, and much more. It plays a key role in the way Airbyte handles connector data and improves the overall organization and accessibility of this data."),(0,i.kt)("h2",{id:"structure"},"Structure"),(0,i.kt)("p",null,"Below is an example of a ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata.yaml")," file for the Postgres source:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'data:\n  allowedHosts:\n    hosts:\n      - ${host}\n      - ${tunnel_method.tunnel_host}\n  connectorSubtype: database\n  connectorType: source\n  definitionId: decd338e-5647-4c0b-adf4-da0e75f5a750\n  dockerImageTag: 2.0.28\n  maxSecondsBetweenMessages: 7200\n  dockerRepository: airbyte/source-postgres\n  githubIssueLabel: source-postgres\n  icon: postgresql.svg\n  license: MIT\n  name: Postgres\n  tags:\n    - language:java\n    - language:python\n  registries:\n    cloud:\n      dockerRepository: airbyte/source-postgres-strict-encrypt\n      enabled: true\n    oss:\n      enabled: true\n  supportLevel: certified\n  documentationUrl: https://docs.airbyte.com/integrations/sources/postgres\nmetadataSpecVersion: "1.0"\n')),(0,i.kt)("h2",{id:"the-registries-section"},"The ",(0,i.kt)("inlineCode",{parentName:"h2"},"registries")," Section"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"registries")," section within the ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata.yaml")," file plays a vital role in determining the contents of the ",(0,i.kt)("inlineCode",{parentName:"p"},"oss_registry.json")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"cloud_registry.json")," files."),(0,i.kt)("p",null,"This section contains two subsections: ",(0,i.kt)("inlineCode",{parentName:"p"},"cloud")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"oss")," (Open Source Software). Each subsection contains details about the specific registry, such as the Docker repository associated with it and whether it's enabled or not."),(0,i.kt)("h3",{id:"structure-1"},"Structure"),(0,i.kt)("p",null,"Here's how the ",(0,i.kt)("inlineCode",{parentName:"p"},"registries")," section is structured in our previous ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata.yaml")," example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"  registries:\n    cloud:\n      dockerRepository: airbyte/source-postgres-strict-encrypt\n      enabled: true\n    oss:\n      enabled: true\n")),(0,i.kt)("p",null,"In this example, both ",(0,i.kt)("inlineCode",{parentName:"p"},"cloud")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"oss")," registries are enabled, and the Docker repository for the ",(0,i.kt)("inlineCode",{parentName:"p"},"cloud")," registry is overrode to ",(0,i.kt)("inlineCode",{parentName:"p"},"airbyte/source-postgres-strict-encrypt"),"."),(0,i.kt)("h3",{id:"updating-registries"},"Updating Registries"),(0,i.kt)("p",null,"When the ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata.yaml")," file is updated, this data is automatically uploaded to Airbyte's metadata service. This service then generates the publicly available ",(0,i.kt)("inlineCode",{parentName:"p"},"oss_registry.json")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"cloud_registry.json")," registries based on the information provided in the ",(0,i.kt)("inlineCode",{parentName:"p"},"registries")," section."),(0,i.kt)("p",null,"For instance, if a connector is listed as ",(0,i.kt)("inlineCode",{parentName:"p"},"enabled: true")," under the ",(0,i.kt)("inlineCode",{parentName:"p"},"oss")," section, it will be included in the ",(0,i.kt)("inlineCode",{parentName:"p"},"oss_registry.json")," file. Similarly, if it's listed as ",(0,i.kt)("inlineCode",{parentName:"p"},"enabled: true")," under the ",(0,i.kt)("inlineCode",{parentName:"p"},"cloud")," section, it will be included in the ",(0,i.kt)("inlineCode",{parentName:"p"},"cloud_registry.json")," file."),(0,i.kt)("p",null,"Thus, the ",(0,i.kt)("inlineCode",{parentName:"p"},"registries")," section in the ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata.yaml")," file provides a flexible and organized way to manage which connectors are included in each registry."),(0,i.kt)("h2",{id:"the-tags-section"},"The ",(0,i.kt)("inlineCode",{parentName:"h2"},"tags")," Section"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"tags")," field is an optional part of the ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata.yaml")," file. It is designed to provide additional context about a connector and improve the connector's discoverability. This field can contain any string, making it a flexible tool for adding additional details about a connector."),(0,i.kt)("p",null,"In the ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata.yaml")," file, ",(0,i.kt)("inlineCode",{parentName:"p"},"tags")," is a list that may contain any number of string elements. Each element in the list is a separate tag. For instance:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'tags:\n  - "language:java"\n  - "keyword:database"\n  - "keyword:SQL"\n')),(0,i.kt)("p",null,"In the example above, the connector has three tags. Tags are used for two primary purposes in Airbyte:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Denoting the Programming Language(s)"),": Tags that begin with language: are used to specify the programming languages that are utilized by the connector. This information is auto-generated by a script that scans the connector's files for recognized programming languages. In the example above, language:java means that the connector uses Java.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Keywords for Searching"),": Tags that begin with keyword: are used to make the connector more discoverable by adding searchable terms related to it. In the example above, the tags keyword:database and keyword:SQL can be used to find this connector when searching for ",(0,i.kt)("inlineCode",{parentName:"p"},"database")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"SQL"),"."))),(0,i.kt)("p",null,"These are just examples of how tags can be used. As a free-form field, the tags list can be customized as required for each connector. This flexibility allows tags to be a powerful tool for managing and discovering connectors."),(0,i.kt)("h2",{id:"the-icon-field"},"The ",(0,i.kt)("inlineCode",{parentName:"h2"},"icon")," Field"),(0,i.kt)("p",null,"This denotes the name of the icon file for the connector. At this time the icon file is located in the ",(0,i.kt)("inlineCode",{parentName:"p"},"platform-internal")," repository. So please ensure that the icon file is present in the ",(0,i.kt)("inlineCode",{parentName:"p"},"platform-internal")," repository at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/airbytehq/airbyte-platform-internal/tree/master/oss/airbyte-config/init/src/main/resources/icons"},"oss/airbyte-config/init/src/main/resources/icons")," before adding the icon name to the ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata.yaml")," file."),(0,i.kt)("h3",{id:"future-plans"},"Future Plans"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"\u26a0\ufe0f This property is in the process of being refactored to be a file in the connector folder")),(0,i.kt)("p",null,"You may notice a ",(0,i.kt)("inlineCode",{parentName:"p"},"icon.svg")," file in the connectors folder."),(0,i.kt)("p",null,"This is because we are transitioning away from icons being stored in the ",(0,i.kt)("inlineCode",{parentName:"p"},"platform-internal")," repository. Instead, we will be storing them in the connector folder itself. This will allow us to have a single source of truth for all connector-related information."),(0,i.kt)("p",null,"This transition is currently in progress. Once it is complete, the ",(0,i.kt)("inlineCode",{parentName:"p"},"icon")," field in the ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata.yaml")," file will be removed, and the ",(0,i.kt)("inlineCode",{parentName:"p"},"icon.svg")," file will be used instead."),(0,i.kt)("h2",{id:"the-releases-section"},"The ",(0,i.kt)("inlineCode",{parentName:"h2"},"releases")," Section"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"releases")," section contains extra information about certain types of releases. The current types of releases are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"breakingChanges"))),(0,i.kt)("h3",{id:"breakingchanges"},(0,i.kt)("inlineCode",{parentName:"h3"},"breakingChanges")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"breakingChanges")," section of ",(0,i.kt)("inlineCode",{parentName:"p"},"releases")," contains a dictionary of version numbers (usually major versions, i.e. ",(0,i.kt)("inlineCode",{parentName:"p"},"1.0.0"),") and information about\ntheir associated breaking changes. Each entry must contain the following parameters:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"message"),": A description of the breaking change, written in a user-friendly format. This message should briefly describe",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"What the breaking change is"),(0,i.kt)("li",{parentName:"ul"},"How it affects the user (or which users it will affect)"),(0,i.kt)("li",{parentName:"ul"},"What the user should do to fix the issue"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"upgradeDeadline"),": (",(0,i.kt)("inlineCode",{parentName:"li"},"YYYY-MM-DD"),") The date by which the user should upgrade to the new version.")),(0,i.kt)("p",null,"Note that the ",(0,i.kt)("inlineCode",{parentName:"p"},"message")," should be brief no matter how involved the fix is - the user will be redirected to the migration documentation for the\nfull upgrade/migration instructions.  That said, the message should at least include:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"What was changed"),(0,i.kt)("li",{parentName:"ol"},"Why the change is better for the user (fixed a bug, something got faster, etc)"),(0,i.kt)("li",{parentName:"ol"},"What the user needs to do in order to sync again (e.g. a full reset, run a SQL query in the destinaton, etc)")),(0,i.kt)("p",null,"When considering what the ",(0,i.kt)("inlineCode",{parentName:"p"},"upgradeDeadline")," should be, target the amount of time whcih would be reasonable for the user to make the required changes described in the ",(0,i.kt)("inlineCode",{parentName:"p"},"message")," and upgrade giude.  If the required changes are ",(0,i.kt)("em",{parentName:"p"},"simple"),' (e.g. "do a full reset"), 2 weeks is recommended.  Note that you do ',(0,i.kt)("em",{parentName:"p"},"not")," want to link the duration of ",(0,i.kt)("inlineCode",{parentName:"p"},"upgradeDeadline")," to an upstream API's deprication date.  While it is true that the older version of a connector will continue to work for that period of time, it means that users who are pinned to the older version of the connector will not beneift from future updates and fixes."),(0,i.kt)("p",null,"Without all 3 of these points, the breaking change message is not helpful to users. "),(0,i.kt)("p",null,"Here is an example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'releases:\n  breakingChanges:\n    1.0.0:\n      message: "This version changes the connector\u2019s authentication by removing ApiKey authentication, which is now deprecated by the [upstream source](upsteam-docs-url.com). Users currently using ApiKey auth will need to reauthenticate with OAuth after upgrading to continue syncing."\n      upgradeDeadline: "2023-12-31"  # The date that the upstream API stops support for ApiKey authentication\n')))}u.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=i,h=p["".concat(l,".").concat(m)]||p[m]||u[m]||r;return n?a.createElement(h,o(o({ref:t},d),{},{components:n})):a.createElement(h,o({ref:t},d))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:i,o[1]=s;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);