"use strict";(self.webpackChunkdocu=self.webpackChunkdocu||[]).push([[30614],{41719:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var n=a(87462),r=(a(67294),a(3905));const i={},l="Local CSV",o={unversionedId:"integrations/destinations/csv",id:"integrations/destinations/csv",title:"Local CSV",description:"This destination is meant to be used on a local workstation and won't work on Kubernetes",source:"@site/../docs/integrations/destinations/csv.md",sourceDirName:"integrations/destinations",slug:"/integrations/destinations/csv",permalink:"/integrations/destinations/csv",draft:!1,editUrl:"https://github.com/airbytehq/airbyte/blob/master/docs/../docs/integrations/destinations/csv.md",tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"Convex",permalink:"/integrations/destinations/convex"},next:{title:"Cumul.io",permalink:"/integrations/destinations/cumulio"}},p={},d=[{value:"Overview",id:"overview",level:2},{value:"Sync Overview",id:"sync-overview",level:3},{value:"Output schema",id:"output-schema",level:4},{value:"Features",id:"features",level:4},{value:"Performance considerations",id:"performance-considerations",level:4},{value:"Getting Started",id:"getting-started",level:2},{value:"Example:",id:"example",level:3},{value:"Access Replicated Data Files",id:"access-replicated-data-files",level:2},{value:"Changelog",id:"changelog",level:2}],s={toc:d},m="wrapper";function c(t){let{components:e,...a}=t;return(0,r.kt)(m,(0,n.Z)({},s,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"local-csv"},"Local CSV"),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"This destination is meant to be used on a local workstation and won't work on Kubernetes")),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"This destination writes data to a directory on the ",(0,r.kt)("em",{parentName:"p"},"local")," filesystem on the host running Airbyte. By default, data is written to ",(0,r.kt)("inlineCode",{parentName:"p"},"/tmp/airbyte_local"),". To change this location, modify the ",(0,r.kt)("inlineCode",{parentName:"p"},"LOCAL_ROOT")," environment variable for Airbyte."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Please make sure that Docker Desktop has access to ",(0,r.kt)("inlineCode",{parentName:"p"},"/tmp")," (and ",(0,r.kt)("inlineCode",{parentName:"p"},"/private"),' on a MacOS, as /tmp has a symlink that points to /private. It will not work otherwise). You allow it with "File sharing" in ',(0,r.kt)("inlineCode",{parentName:"p"},"Settings -> Resources -> File sharing -> add the one or two above folder"),' and hit the "Apply & restart" button.')),(0,r.kt)("h3",{id:"sync-overview"},"Sync Overview"),(0,r.kt)("h4",{id:"output-schema"},"Output schema"),(0,r.kt)("p",null,"Each stream will be output into its own file. Each file will contain 3 columns:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"_airbyte_ab_id"),": a uuid assigned by Airbyte to each event that is processed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"_airbyte_emitted_at"),": a timestamp representing when the event was pulled from the data source."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"_airbyte_data"),": a json blob representing with the event data.")),(0,r.kt)("h4",{id:"features"},"Features"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Feature"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Supported"),(0,r.kt)("th",{parentName:"tr",align:"left"}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Full Refresh Sync"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Yes"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Incremental - Append Sync"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Yes"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Incremental - Append + Deduped"),(0,r.kt)("td",{parentName:"tr",align:"left"},"No"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Namespaces"),(0,r.kt)("td",{parentName:"tr",align:"left"},"No"),(0,r.kt)("td",{parentName:"tr",align:"left"})))),(0,r.kt)("h4",{id:"performance-considerations"},"Performance considerations"),(0,r.kt)("p",null,"This integration will be constrained by the speed at which your filesystem accepts writes."),(0,r.kt)("h2",{id:"getting-started"},"Getting Started"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"destination_path")," will always start with ",(0,r.kt)("inlineCode",{parentName:"p"},"/local")," whether it is specified by the user or not. Any directory nesting within local will be mapped onto the local mount."),(0,r.kt)("p",null,"By default, the ",(0,r.kt)("inlineCode",{parentName:"p"},"LOCAL_ROOT")," env variable in the ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file is set ",(0,r.kt)("inlineCode",{parentName:"p"},"/tmp/airbyte_local"),"."),(0,r.kt)("p",null,"The local mount is mounted by Docker onto ",(0,r.kt)("inlineCode",{parentName:"p"},"LOCAL_ROOT"),". This means the ",(0,r.kt)("inlineCode",{parentName:"p"},"/local")," is substituted by ",(0,r.kt)("inlineCode",{parentName:"p"},"/tmp/airbyte_local")," by default."),(0,r.kt)("h3",{id:"example"},"Example:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If ",(0,r.kt)("inlineCode",{parentName:"li"},"destination_path")," is set to ",(0,r.kt)("inlineCode",{parentName:"li"},"/local/cars/models")),(0,r.kt)("li",{parentName:"ul"},"the local mount is using the ",(0,r.kt)("inlineCode",{parentName:"li"},"/tmp/airbyte_local")," default"),(0,r.kt)("li",{parentName:"ul"},"then all data will be written to ",(0,r.kt)("inlineCode",{parentName:"li"},"/tmp/airbyte_local/cars/models")," directory.")),(0,r.kt)("h2",{id:"access-replicated-data-files"},"Access Replicated Data Files"),(0,r.kt)("p",null,"If your Airbyte instance is running on the same computer that you are navigating with, you can open your browser and enter ",(0,r.kt)("a",{parentName:"p",href:"file:///tmp/airbyte_local"},"file:///tmp/airbyte_local")," to look at the replicated data locally. If the first approach fails or if your Airbyte instance is running on a remote server, follow the following steps to access the replicated files:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Access the scheduler container using ",(0,r.kt)("inlineCode",{parentName:"li"},"docker exec -it airbyte-server bash")),(0,r.kt)("li",{parentName:"ol"},"Navigate to the default local mount using ",(0,r.kt)("inlineCode",{parentName:"li"},"cd /tmp/airbyte_local")),(0,r.kt)("li",{parentName:"ol"},"Navigate to the replicated file directory you specified when you created the destination, using ",(0,r.kt)("inlineCode",{parentName:"li"},"cd /{destination_path}")),(0,r.kt)("li",{parentName:"ol"},"List files containing the replicated data using ",(0,r.kt)("inlineCode",{parentName:"li"},"ls")),(0,r.kt)("li",{parentName:"ol"},"Execute ",(0,r.kt)("inlineCode",{parentName:"li"},"cat {filename}")," to display the data in a particular file")),(0,r.kt)("p",null,"You can also copy the output file to your host machine, the following command will copy the file to the current working directory you are using:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"docker cp airbyte-server:/tmp/airbyte_local/{destination_path}/{filename}.csv .\n")),(0,r.kt)("p",null,"Note: If you are running Airbyte on Windows with Docker backed by WSL2, you have to use similar step as above or refer to this ",(0,r.kt)("a",{parentName:"p",href:"/operator-guides/locating-files-local-destination"},"link")," for an alternative approach."),(0,r.kt)("h2",{id:"changelog"},"Changelog"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Version"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Date"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Pull Request"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Subject"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"1.0.0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2022-12-20"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/17998"},"17998")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Breaking changes: non backwards compatible. Adds delimiter dropdown.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"0.2.10"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2022-06-20"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/13932"},"13932")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Merging published connector changes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"0.2.9"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2022-02-14"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/10256"},"10256")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Add ExitOnOutOfMemoryError to java connectors and bump versions")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"0.2.8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-07-21"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/3555"},"3555")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checkpointing: Partial Success in BufferedStreamConsumer (Destination)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"0.2.7"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-06-09"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/3973"},"3973")),(0,r.kt)("td",{parentName:"tr",align:"left"},"add AIRBYTE_ENTRYPOINT for kubernetes support")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"0.2.6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-05-25"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/3290"},"3290")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checkpointing: Worker use destination (instead of source) for state")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"0.2.5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-05-10"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/3327"},"3327")),(0,r.kt)("td",{parentName:"tr",align:"left"},"don't split lines on LSEP unicode characters when reading lines in destinations")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"0.2.4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-05-10"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/3289"},"3289")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bump all destination versions to support outputting messages")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"0.2.3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-03-31"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/2668"},"2668")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Add SupportedDestinationSyncModes to destination specs objects")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"0.2.2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-03-19"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/2460"},"2460")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Destinations supports destination sync mode")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"0.2.0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-03-09"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/2238"},"2238")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Upgrade all connectors (0.2.0) so protocol allows future / unknown properties")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"0.1.8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-29"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/1882"},"1882")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Local File Destinations UX change with destination paths")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"0.1.7"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-20"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/1737"},"1737")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Rename destination tables")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"0.1.6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-19"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/1708"},"1708")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Add metadata prefix to destination internal columns")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"0.1.5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2020-12-12"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/1294"},"1294")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Incremental CSV destination")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"0.1.4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2020-11-30"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/1038"},"1038")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Change jdbc sources to discover more than standard schemas")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"0.1.3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2020-11-20"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/1021"},"1021")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Incremental Docs and Data Model Update")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"0.1.2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2020-11-18"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/998"},"998")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Adding incremental to the data model")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"0.1.1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2020-11-10"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/895"},"895")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bump versions: all destinations and source exchange rate")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"0.1.0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2020-10-21"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/676"},"676")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Integrations Reorganization: Connectors")))))}c.isMDXComponent=!0},3905:(t,e,a)=>{a.d(e,{Zo:()=>s,kt:()=>u});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},i=Object.keys(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),d=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},s=function(t){var e=d(t.components);return n.createElement(p.Provider,{value:e},t.children)},m="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,i=t.originalType,p=t.parentName,s=o(t,["components","mdxType","originalType","parentName"]),m=d(a),k=r,u=m["".concat(p,".").concat(k)]||m[k]||c[k]||i;return a?n.createElement(u,l(l({ref:e},s),{},{components:a})):n.createElement(u,l({ref:e},s))}));function u(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=a.length,l=new Array(i);l[0]=k;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o[m]="string"==typeof t?t:r,l[1]=o;for(var d=2;d<i;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"}}]);