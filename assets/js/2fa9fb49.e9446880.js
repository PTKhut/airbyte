"use strict";(self.webpackChunkdocu=self.webpackChunkdocu||[]).push([[34855],{22940:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));const a={},l="Deploy Airbyte on AWS (Amazon EC2)",i={unversionedId:"deploying-airbyte/on-aws-ec2",id:"deploying-airbyte/on-aws-ec2",title:"Deploy Airbyte on AWS (Amazon EC2)",description:"This page guides you through deploying Airbyte Open Source on an Amazon EC2 instance by setting up the deployment environment, installing and starting Airbyte, and connecting it to the Amazon EC2 instance.",source:"@site/../docs/deploying-airbyte/on-aws-ec2.md",sourceDirName:"deploying-airbyte",slug:"/deploying-airbyte/on-aws-ec2",permalink:"/deploying-airbyte/on-aws-ec2",draft:!1,editUrl:"https://github.com/airbytehq/airbyte/blob/master/docs/../docs/deploying-airbyte/on-aws-ec2.md",tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"Local Deployment",permalink:"/deploying-airbyte/local-deployment"},next:{title:"Deploy Airbyte on Azure (Cloud Shell)",permalink:"/deploying-airbyte/on-azure-vm-cloud-shell"}},s={},c=[{value:"Requirements",id:"requirements",level:2},{value:"Set up the environment",id:"set-up-the-environment",level:2},{value:"Install and start Airbyte",id:"install-and-start-airbyte",level:2},{value:"Connect to Airbyte",id:"connect-to-airbyte",level:2},{value:"Get Airbyte logs in CloudWatch",id:"get-airbyte-logs-in-cloudwatch",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}],u={toc:c},p="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"deploy-airbyte-on-aws-amazon-ec2"},"Deploy Airbyte on AWS (Amazon EC2)"),(0,r.kt)("p",null,"This page guides you through deploying Airbyte Open Source on an ",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html"},"Amazon EC2 instance")," by setting up the deployment environment, installing and starting Airbyte, and connecting it to the Amazon EC2 instance."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The instructions have been tested on Amazon Linux 2 AMI (HVM).")),(0,r.kt)("h2",{id:"requirements"},"Requirements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"To test Airbyte, we recommend a ",(0,r.kt)("inlineCode",{parentName:"li"},"t2.medium")," instance"),(0,r.kt)("li",{parentName:"ul"},"To deploy Airbyte in a production environment, we recommend a ",(0,r.kt)("inlineCode",{parentName:"li"},"t2.large")," instance"),(0,r.kt)("li",{parentName:"ul"},"Make sure your Docker Desktop app is running to ensure all services run smoothly"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-key-pairs.html"},"Create and download an SSH key to connect to the instance"))),(0,r.kt)("h2",{id:"set-up-the-environment"},"Set up the environment"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"To connect to your instance, run the following command on your local terminal:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"SSH_KEY=~/Downloads/dataline-key-airbyte.pem # the file path you downloaded the key\nINSTANCE_IP=REPLACE_WITH_YOUR_INSTANCE_IP # find your IP address in the EC2 console under the Instances tab\nchmod 400 $SSH_KEY # or ssh will complain that the key has the wrong permissions\nssh -i $SSH_KEY ec2-user@$INSTANCE_IP # connect to the aws ec2 instance AMI and the your private IP address\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"To install Docker, run the following command in your SSH session on the instance terminal:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo yum update -y\nsudo yum install -y docker\nsudo service docker start\nsudo usermod -a -G docker $USER\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"To install ",(0,r.kt)("inlineCode",{parentName:"li"},"docker-compose"),", run the following command in your ssh session on the instance terminal:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo yum install -y docker-compose-plugin\ndocker compose version\n")),(0,r.kt)("p",null,"If you encounter an error on this part, you might prefer to follow the documentation to ",(0,r.kt)("a",{parentName:"p",href:"https://docs.docker.com/compose/install/linux/#install-the-plugin-manually"},"install the docker compose plugin manually")," (",(0,r.kt)("em",{parentName:"p"},"make sure to do it for all users"),")."),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"To close the SSH connection, run the following command in your SSH session on the instance terminal:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"logout\n")),(0,r.kt)("h2",{id:"install-and-start-airbyte"},"Install and start Airbyte"),(0,r.kt)("p",null,"In your local terminal, run the following commands:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Connect to your instance:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ssh -i $SSH_KEY ec2-user@$INSTANCE_IP\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Install Airbyte:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir airbyte && cd airbyte\nwget https://raw.githubusercontent.com/airbytehq/airbyte/master/run-ab-platform.sh\nchmod +x run-ab-platform.sh\n./run-ab-platform.sh -b\n")),(0,r.kt)("h2",{id:"connect-to-airbyte"},"Connect to Airbyte"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"For security reasons, we strongly recommend not exposing Airbyte on Internet available ports.")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create an SSH tunnel for port 8000:")),(0,r.kt)("p",null,"If you want to use different ports, modify ",(0,r.kt)("inlineCode",{parentName:"p"},"API_URL")," in your .env file and restart Airbyte.\nRun the following commands in your workstation terminal from the downloaded key folder:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# In your workstation terminal\nSSH_KEY=~/Downloads/dataline-key-airbyte.pem\nssh -i $SSH_KEY -L 8000:localhost:8000 -N -f ec2-user@$INSTANCE_IP\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Visit ",(0,r.kt)("inlineCode",{parentName:"li"},"http://localhost:8000")," to verify the deployment.")),(0,r.kt)("h2",{id:"get-airbyte-logs-in-cloudwatch"},"Get Airbyte logs in CloudWatch"),(0,r.kt)("p",null,"Follow this ",(0,r.kt)("a",{parentName:"p",href:"https://aws.amazon.com/pt/premiumsupport/knowledge-center/cloudwatch-docker-container-logs-proxy/"},"guide")," to get your logs from your Airbyte Docker containers in CloudWatch."),(0,r.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,r.kt)("p",null,"If you encounter any issues, reach out to our community on ",(0,r.kt)("a",{parentName:"p",href:"https://slack.airbyte.com/"},"Slack"),"."))}m.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),d=r,y=p["".concat(s,".").concat(d)]||p[d]||m[d]||a;return n?o.createElement(y,l(l({ref:t},u),{},{components:n})):o.createElement(y,l({ref:t},u))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<a;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);