"use strict";(self.webpackChunkdocu=self.webpackChunkdocu||[]).push([[4450],{42932:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const o={},i="Monitoring Airbyte",s={unversionedId:"operator-guides/collecting-metrics",id:"operator-guides/collecting-metrics",title:"Monitoring Airbyte",description:"Airbyte offers you various ways to monitor your ELT pipelines. These options range from using open-source tools to integrating with enterprise-grade SaaS platforms.",source:"@site/../docs/operator-guides/collecting-metrics.md",sourceDirName:"operator-guides",slug:"/operator-guides/collecting-metrics",permalink:"/operator-guides/collecting-metrics",draft:!1,editUrl:"https://github.com/airbytehq/airbyte/blob/master/docs/../docs/operator-guides/collecting-metrics.md",tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"Windows - Browsing Local File Output",permalink:"/operator-guides/locating-files-local-destination"},next:{title:"Transformations with SQL (Part 1/3)",permalink:"/operator-guides/transformation-and-normalization/transformations-with-sql"}},l={},c=[{value:"Airbyte Datadog Integration",id:"airbyte-datadog-integration",level:2},{value:"Setup Instructions",id:"setup-instructions",level:3}],p={toc:c},m="wrapper";function d(e){let{components:t,...o}=e;return(0,a.kt)(m,(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"monitoring-airbyte"},"Monitoring Airbyte"),(0,a.kt)("p",null,"Airbyte offers you various ways to monitor your ELT pipelines. These options range from using open-source tools to integrating with enterprise-grade SaaS platforms."),(0,a.kt)("p",null,"Here's a quick overview:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Connection Logging: All Airbyte instances provide extensive logs for each connector, giving detailed reports on the data synchronization process. This is available across all Airbyte offerings."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#airbyte-datadog-integration"},"Airbyte Datadog Integration"),": Airbyte Enterprise customers can leverage our integration with Datadog. This lets you monitor and analyze your data pipelines right within your Datadog dashboards at no additional cost."),(0,a.kt)("li",{parentName:"ul"},"Airbyte OpenTelemetry (OTEL) Integration: Coming soon, this will allow you to push metrics to your self-hosted monitoring solution using OpenTelemetry.")),(0,a.kt)("p",null,"Please browse the sections below for more details on each option and how to set it up."),(0,a.kt)("h2",{id:"airbyte-datadog-integration"},"Airbyte Datadog Integration"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Datadog&#39;s Airbyte Integration Dashboard",src:r(54062).Z,width:"1506",height:"1256"})),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"This integration is available for ",(0,a.kt)("strong",{parentName:"em"},"Airbyte Enterprise users"),". Airbyte Enterprise includes premium support with SLAs for your critical pipelines, security features including SSO, RBAC and audit logging, in addition to reliability, scalability and compliance features.\nPlease reach out to ",(0,a.kt)("a",{parentName:"em",href:"https://airbyte.com/talk-to-sales"},"our team")," if you want to learn more.")),(0,a.kt)("p",null,"Airbyte's new integration with Datadog brings the convenience of monitoring and analyzing your Airbyte data pipelines directly within your Datadog dashboards.\nThis integration brings forth new ",(0,a.kt)("inlineCode",{parentName:"p"},"airbyte.*")," metrics along with new dashboards. The list of metrics is found ",(0,a.kt)("a",{parentName:"p",href:"https://docs.datadoghq.com/integrations/airbyte/#data-collected"},"here"),"."),(0,a.kt)("h3",{id:"setup-instructions"},"Setup Instructions"),(0,a.kt)("p",null,"Setting up this integration for Airbyte instances deployed with Docker involves five straightforward steps:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Set Datadog Airbyte Config:")," Create or configure the ",(0,a.kt)("inlineCode",{parentName:"li"},"datadog.yaml")," file with the contents below:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'dogstatsd_mapper_profiles:\n  - name: airbyte_worker\n    prefix: "worker."\n    mappings:\n      - match: "worker.temporal_workflow_*"\n        name: "airbyte.worker.temporal_workflow.$1"\n      - match: "worker.worker_*"\n        name: "airbyte.worker.$1"\n      - match: "worker.state_commit_*"\n        name: "airbyte.worker.state_commit.$1"\n      - match: "worker.job_*"\n        name: "airbyte.worker.job.$1"\n      - match: "worker.attempt_*"\n        name: "airbyte.worker.attempt.$1"\n      - match: "worker.activity_*"\n        name: "airbyte.worker.activity.$1"\n      - match: "worker.*"\n        name: "airbyte.worker.$1"\n  - name: airbyte_cron\n    prefix: "cron."\n    mappings:\n      - match: "cron.cron_jobs_run"\n        name: "airbyte.cron.jobs_run"\n      - match: "cron.*"\n        name: "airbyte.cron.$1"\n  - name: airbyte_metrics_reporter\n    prefix: "metrics-reporter."\n    mappings:\n      - match: "metrics-reporter.*"\n        name: "airbyte.metrics_reporter.$1"\n  - name: airbyte_orchestrator\n    prefix: "orchestrator."\n    mappings:\n      - match: "orchestrator.*"\n        name: "airbyte.orchestrator.$1"\n  - name: airbyte_server\n    prefix: "server."\n    mappings:\n      - match: "server.*"\n        name: "airbyte.server.$1"\n  - name: airbyte_general\n    prefix: "airbyte."\n    mappings:\n      - match: "airbyte.worker.temporal_workflow_*"\n        name: "airbyte.worker.temporal_workflow.$1"\n      - match: "airbyte.worker.worker_*"\n        name: "airbyte.worker.$1"\n      - match: "airbyte.worker.state_commit_*"\n        name: "airbyte.worker.state_commit.$1"\n      - match: "airbyte.worker.job_*"\n        name: "airbyte.worker.job.$1"\n      - match: "airbyte.worker.attempt_*"\n        name: "airbyte.worker.attempt.$1"\n      - match: "airbyte.worker.activity_*"\n        name: "airbyte.worker.activity.$1"\n      - match: "airbyte.cron.cron_jobs_run"\n        name: "airbyte.cron.jobs_run"\n')),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Add Datadog Agent and Mount Config:")," If the Datadog Agent is not yet deployed to your instances running Airbyte, you can modify the provided  ",(0,a.kt)("inlineCode",{parentName:"li"},"docker-compose.yaml")," file in the Airbyte repository to include the Datadog Agent. For the Datadog agent to submit metrics, you will need to add an ",(0,a.kt)("a",{parentName:"li",href:"https://docs.datadoghq.com/account_management/api-app-keys/#add-an-api-key-or-client-token"},"API key"),". Then, be sure to properly mount your ",(0,a.kt)("inlineCode",{parentName:"li"},"datadog.yaml")," file as a Docker volume:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"  dd-agent:\n    container_name: dd-agent\n    image: gcr.io/datadoghq/agent:7\n    pid: host\n    environment:\n      - DD_API_KEY={REPLACE-WITH-DATADOG-API-KEY}\n      - DD_SITE=datadoghq.com\n      - DD_HOSTNAME={REPLACE-WITH-DATADOG-HOSTNAME}\n      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - /proc/:/host/proc/:ro\n      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro\n      - {REPLACE-WITH-PATH-TO}/datadog.yaml:/etc/datadog-agent/datadog.yaml\n    networks:\n      - airbyte_internal\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Update Docker Compose Configuration"),": Modify your ",(0,a.kt)("inlineCode",{parentName:"li"},"docker-compose.yaml")," file in the Airbyte repository to include the ",(0,a.kt)("inlineCode",{parentName:"li"},"metrics-reporter")," container. This submits Airbyte metrics to the Datadog Agent:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"  metric-reporter:\n    image: airbyte/metrics-reporter:${VERSION}\n    container_name: metric-reporter\n    networks:\n      - airbyte_internal\n    environment:\n      - DATABASE_PASSWORD=${DATABASE_PASSWORD}\n      - DATABASE_URL=${DATABASE_URL}\n      - DATABASE_USER=${DATABASE_USER}\n      - DD_AGENT_HOST=${DD_AGENT_HOST}\n      - DD_DOGSTATSD_PORT=${DD_DOGSTATSD_PORT}\n      - METRIC_CLIENT=${METRIC_CLIENT}\n      - PUBLISH_METRICS=${PUBLISH_METRICS}\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Set Environment Variables"),": Amend your ",(0,a.kt)("inlineCode",{parentName:"li"},".env")," file with the correct values needed by ",(0,a.kt)("inlineCode",{parentName:"li"},"docker-compose.yaml"),":")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"PUBLISH_METRICS=true\nMETRIC_CLIENT=datadog\nDD_AGENT_HOST=dd-agent\nDD_DOGSTATSD_PORT=8125\n")),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Re-deploy Airbyte and the Datadog Agent"),": With the updated configurations, you're ready to deploy your Airbyte application by running ",(0,a.kt)("inlineCode",{parentName:"li"},"docker compose up"),".")))}d.isMDXComponent=!0},3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>y});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(r),u=a,y=m["".concat(l,".").concat(u)]||m[u]||d[u]||o;return r?n.createElement(y,i(i({ref:t},p),{},{components:r})):n.createElement(y,i({ref:t},p))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},54062:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/DatadogAirbyteIntegration_OutOfTheBox_Dashboard-aced77e0781dfe903179f2761535468c.png"}}]);