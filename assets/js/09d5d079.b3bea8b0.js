"use strict";(self.webpackChunkdocu=self.webpackChunkdocu||[]).push([[65888],{71894:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const a={},i="Changes to CDK or Low-Code Connector",s={unversionedId:"contributing-to-airbyte/change-cdk-connector",id:"contributing-to-airbyte/change-cdk-connector",title:"Changes to CDK or Low-Code Connector",description:"Contribution Process",source:"@site/../docs/contributing-to-airbyte/change-cdk-connector.md",sourceDirName:"contributing-to-airbyte",slug:"/contributing-to-airbyte/change-cdk-connector",permalink:"/contributing-to-airbyte/change-cdk-connector",draft:!1,editUrl:"https://github.com/airbytehq/airbyte/blob/master/docs/../docs/contributing-to-airbyte/change-cdk-connector.md",tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"Issues and Requests",permalink:"/contributing-to-airbyte/issues-and-requests"},next:{title:"Submit a New Connector",permalink:"/contributing-to-airbyte/submit-new-connector"}},l={},c=[{value:"Contribution Process",id:"contribution-process",level:2},{value:"Open an issue, or find a similar one.",id:"open-an-issue-or-find-a-similar-one",level:3},{value:"Code your contribution",id:"code-your-contribution",level:3},{value:"Open a pull request",id:"open-a-pull-request",level:3},{value:"Review process",id:"review-process",level:3},{value:"Breaking Changes to Connectors",id:"breaking-changes-to-connectors",level:2},{value:"Types of Breaking Changes",id:"types-of-breaking-changes",level:3}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"changes-to-cdk-or-low-code-connector"},"Changes to CDK or Low-Code Connector"),(0,o.kt)("h2",{id:"contribution-process"},"Contribution Process"),(0,o.kt)("h3",{id:"open-an-issue-or-find-a-similar-one"},"Open an issue, or find a similar one."),(0,o.kt)("p",null,"Before jumping into the code please first:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Check if the improvement you want to make or bug you want to fix is already captured in an ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/airbytehq/airbyte/issues?q=is%3Aopen+is%3Aissue+label%3Aarea%2Fconnectors+-label%3Aneeds-triage+label%3Acommunity"},"existing issue")," "),(0,o.kt)("li",{parentName:"ol"},"If you don't find an existing issue, either")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/airbytehq/airbyte/issues/new?assignees=&labels=type%2Fbug%2Carea%2Fconnectors%2Cneeds-triage&projects=&template=1-issue-connector.yaml"},"Report a Connector Bug"),", or"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/airbytehq/airbyte/issues/new?assignees=&labels=type%2Fenhancement%2Cneeds-triage&projects=&template=6-feature-request.yaml"},"Request a New Connector Feature"))),(0,o.kt)("p",null,"This will enable our team to make sure your contribution does not overlap with existing works and will comply with the design orientation we are currently heading the product toward. If you do not receive an update on the issue from our team, please ping us on ",(0,o.kt)("a",{parentName:"p",href:"https://slack.airbyte.io"},"Slack"),"!"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Make sure you're working on an issue had been already triaged to not have your contribution declined.")),(0,o.kt)("h3",{id:"code-your-contribution"},"Code your contribution"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"To contribute to a connector, fork the ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/airbytehq/airbyte"},"Connector repository"),". "),(0,o.kt)("li",{parentName:"ol"},"Open a branch for your work"),(0,o.kt)("li",{parentName:"ol"},"Code the change"),(0,o.kt)("li",{parentName:"ol"},"Write a unit test for each custom function you added or changed"),(0,o.kt)("li",{parentName:"ol"},"Ensure all tests, including connector acceptance tests, pass"),(0,o.kt)("li",{parentName:"ol"},"Update the ",(0,o.kt)("inlineCode",{parentName:"li"},"metadata.yaml")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"Dockerfile")," version following the ",(0,o.kt)("a",{parentName:"li",href:"/contributing-to-airbyte/resources/pull-requests-handbook#semantic-versioning-for-connectors"},"guidelines")),(0,o.kt)("li",{parentName:"ol"},"Update the changelog entry in documentation in ",(0,o.kt)("inlineCode",{parentName:"li"},"docs/integrations/<connector-name>.md"))),(0,o.kt)("p",null,"A comment will automatically be added to your PR with a checklist containing the necessary steps to complete your contribution and get it merged."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"There is a README file inside each connector folder containing instructions to run that connector's tests locally.")),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"Pay attention to breaking changes to connectors. You can read more ",(0,o.kt)("a",{parentName:"p",href:"#breaking-changes-to-connectors"},"here"),".")),(0,o.kt)("h3",{id:"open-a-pull-request"},"Open a pull request"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Rebase master with your branch before submitting a pull request."),(0,o.kt)("li",{parentName:"ol"},"Open the pull request."),(0,o.kt)("li",{parentName:"ol"},"Follow the ",(0,o.kt)("a",{parentName:"li",href:"/contributing-to-airbyte/resources/pull-requests-handbook#pull-request-title-convention"},"title convention")," for Pull Requests"),(0,o.kt)("li",{parentName:"ol"},"Link to an existing Issue"),(0,o.kt)("li",{parentName:"ol"},"Update the ",(0,o.kt)("a",{parentName:"li",href:"/contributing-to-airbyte/resources/pull-requests-handbook#descriptions"},"description")),(0,o.kt)("li",{parentName:"ol"},"Wait for a review from a community maintainer or our team.")),(0,o.kt)("h3",{id:"review-process"},"Review process"),(0,o.kt)("p",null,"When we review, we look at:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u200cDoes the PR solve the issue?"),(0,o.kt)("li",{parentName:"ul"},"Is the proposed solution reasonable?"),(0,o.kt)("li",{parentName:"ul"},"Is it tested? ","(","unit tests or integration tests",")"),(0,o.kt)("li",{parentName:"ul"},"Is it introducing security risks?"),(0,o.kt)("li",{parentName:"ul"},"Is it introducing a breaking change?\n\u200cOnce your PR passes, we will merge it \ud83c\udf89.")),(0,o.kt)("h2",{id:"breaking-changes-to-connectors"},"Breaking Changes to Connectors"),(0,o.kt)("p",null,"Often times, changes to connectors can be made without impacting the user experience.\xa0 However, there are some changes that will require users to take action before they can continue to sync data.\xa0 These changes are considered ",(0,o.kt)("strong",{parentName:"p"},"Breaking Changes")," and require a"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"A ",(0,o.kt)("strong",{parentName:"li"},"Major Version")," increase\xa0"),(0,o.kt)("li",{parentName:"ol"},"An Airbyte Engineer to follow the\xa0 ",(0,o.kt)("a",{parentName:"li",href:"https://docs.google.com/document/u/0/d/1VYQggHbL_PN0dDDu7rCyzBLGRtX-R3cpwXaY8QxEgzw/edit"},"Connector Breaking Change Release Playbook")," before merging.")),(0,o.kt)("h3",{id:"types-of-breaking-changes"},"Types of Breaking Changes"),(0,o.kt)("p",null,"A breaking change is any change that will require users to take action before they can continue to sync data. The following are examples of breaking changes:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Spec Change")," - The configuration required by users of this connector have been changed and syncs will fail until users reconfigure or re-authenticate.\xa0 This change is not possible via a Config Migration\xa0"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Schema Change")," - The type of a property previously present within a record has changed"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Stream or Property Removal")," - Data that was previously being synced is no longer going to be synced."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Destination Format / Normalization Change")," - The way the destination writes the final data or how normalization cleans that data is changing in a way that requires a full-refresh."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"State Changes")," - The format of the source\u2019s state has changed, and the full dataset will need to be re-synced")))}d.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),h=o,m=p["".concat(l,".").concat(h)]||p[h]||d[h]||a;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"}}]);