version: 0.50.2
type: DeclarativeSource

check:
  type: CheckStream
  stream_names:
    - users

streams:
  - type: DeclarativeStream
    name: users
    primary_key:
      - id
    retriever:
      type: SimpleRetriever
      requester:
        type: HttpRequester
        url_base: https://api.sandbox.lever.co/v1
        path: users
        http_method: GET
        request_parameters:
          includeDeactivated: 'True'
        request_headers: {}
        authenticator:
          type: BasicHttpAuthenticator
          password: '{{ config[''password''] }}'
          username: '{{ config[''username''] }}'
        request_body_json: {}
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
      paginator:
        type: DefaultPaginator
        page_token_option:
          type: RequestOption
          inject_into: request_parameter
          field_name: offset
        page_size_option:
          type: RequestOption
          field_name: limit
          inject_into: request_parameter
        pagination_strategy:
          type: CursorPagination
          page_size: 50
          cursor_value: '{{ response.get("next", {}) }}'
          stop_condition: '{{ not response.get("next", {}) }}'
  - type: DeclarativeStream
    name: opportunities
    primary_key:
      - id
    retriever:
      type: SimpleRetriever
      requester:
        type: HttpRequester
        url_base: https://api.sandbox.lever.co/v1
        path: opportunities
        http_method: GET
        request_parameters:
          include: followers
          confidentiality: all
        request_headers: {}
        authenticator:
          type: BasicHttpAuthenticator
          password: '{{ config[''password''] }}'
          username: '{{ config[''username''] }}'
        request_body_json: {}
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
      paginator:
        type: DefaultPaginator
        page_token_option:
          type: RequestOption
          inject_into: request_parameter
          field_name: offset
        page_size_option:
          type: RequestOption
          field_name: limit
          inject_into: request_parameter
        pagination_strategy:
          type: CursorPagination
          page_size: 50
          cursor_value: '{{ response.get("next", {}) }}'
          stop_condition: '{{ not response.get("next", {}) }}'
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: updatedAt
      cursor_datetime_formats:
        - '%s'
      datetime_format: '%s'
      start_datetime:
        type: MinMaxDatetime
        datetime: '{{ config[''start_date''] }}'
        datetime_format: '%Y-%m-%dT%H:%M:%SZ'
      start_time_option:
        type: RequestOption
        field_name: updated_at_start
        inject_into: request_parameter
      end_datetime:
        type: MinMaxDatetime
        datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
        datetime_format: '%Y-%m-%dT%H:%M:%SZ'
      step: PT100S
      cursor_granularity: PT1S
  - type: DeclarativeStream
    name: applications
    primary_key:
      - id
    retriever:
      type: SimpleRetriever
      requester:
        type: HttpRequester
        url_base: https://api.sandbox.lever.co/v1
        path: opportunities/{{ stream_partition.opportunity_id }}/applications
        http_method: GET
        request_parameters: {}
        request_headers: {}
        authenticator:
          type: BasicHttpAuthenticator
          password: '{{ config[''password''] }}'
          username: '{{ config[''username''] }}'
        request_body_json: {}
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
      paginator:
        type: DefaultPaginator
        page_token_option:
          type: RequestOption
          inject_into: request_parameter
          field_name: offset
        page_size_option:
          type: RequestOption
          field_name: limit
          inject_into: request_parameter
        pagination_strategy:
          type: CursorPagination
          page_size: 50
          cursor_value: '{{ response.get("next", {}) }}'
          stop_condition: '{{ not response.get("next", {}) }}'
      partition_router:
        - type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: opportunity_id
              stream:
                type: DeclarativeStream
                name: opportunities
                primary_key:
                  - id
                schema_loader:
                  type: InlineSchemaLoader
                  schema:
                    $schema: http://json-schema.org/draft-07/schema#
                    additionalProperties: true
                    properties: {}
                    type: object
                retriever:
                  type: SimpleRetriever
                  requester:
                    type: HttpRequester
                    url_base: https://api.sandbox.lever.co/v1
                    path: opportunities
                    http_method: GET
                    request_parameters:
                      include: followers
                      confidentiality: all
                    request_headers: {}
                    authenticator:
                      type: BasicHttpAuthenticator
                      password: '{{ config[''password''] }}'
                      username: '{{ config[''username''] }}'
                    request_body_json: {}
                  record_selector:
                    type: RecordSelector
                    extractor:
                      type: DpathExtractor
                      field_path:
                        - data
                  paginator:
                    type: DefaultPaginator
                    page_token_option:
                      type: RequestOption
                      inject_into: request_parameter
                      field_name: offset
                    page_size_option:
                      type: RequestOption
                      field_name: limit
                      inject_into: request_parameter
                    pagination_strategy:
                      type: CursorPagination
                      page_size: 50
                      cursor_value: '{{ response.get("next", {}) }}'
                      stop_condition: '{{ not response.get("next", {}) }}'
                incremental_sync:
                  type: DatetimeBasedCursor
                  cursor_field: updatedAt
                  cursor_datetime_formats:
                    - '%s'
                  datetime_format: '%s'
                  start_datetime:
                    type: MinMaxDatetime
                    datetime: '{{ config[''start_date''] }}'
                    datetime_format: '%Y-%m-%dT%H:%M:%SZ'
                  start_time_option:
                    type: RequestOption
                    field_name: updated_at_start
                    inject_into: request_parameter
                  end_datetime:
                    type: MinMaxDatetime
                    datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
                    datetime_format: '%Y-%m-%dT%H:%M:%SZ'
                  step: PT100S
                  cursor_granularity: PT1S
  - type: DeclarativeStream
    name: interviews
    primary_key:
      - id
    retriever:
      type: SimpleRetriever
      requester:
        type: HttpRequester
        url_base: https://api.sandbox.lever.co/v1
        path: opportunities/{{ stream_partition.opportunity_id }}/interviews
        http_method: GET
        request_parameters: {}
        request_headers: {}
        authenticator:
          type: BasicHttpAuthenticator
          password: '{{ config[''password''] }}'
          username: '{{ config[''username''] }}'
        request_body_json: {}
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
      paginator:
        type: DefaultPaginator
        page_token_option:
          type: RequestOption
          inject_into: request_parameter
          field_name: offset
        page_size_option:
          type: RequestOption
          field_name: limit
          inject_into: request_parameter
        pagination_strategy:
          type: CursorPagination
          page_size: 50
          cursor_value: '{{ response.get("next", {}) }}'
          stop_condition: '{{ not response.get("next", {}) }}'
      partition_router:
        - type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: opportunity_id
              stream:
                type: DeclarativeStream
                name: opportunities
                primary_key:
                  - id
                schema_loader:
                  type: InlineSchemaLoader
                  schema:
                    $schema: http://json-schema.org/draft-07/schema#
                    additionalProperties: true
                    properties: {}
                    type: object
                retriever:
                  type: SimpleRetriever
                  requester:
                    type: HttpRequester
                    url_base: https://api.sandbox.lever.co/v1
                    path: opportunities
                    http_method: GET
                    request_parameters:
                      include: followers
                      confidentiality: all
                    request_headers: {}
                    authenticator:
                      type: BasicHttpAuthenticator
                      password: '{{ config[''password''] }}'
                      username: '{{ config[''username''] }}'
                    request_body_json: {}
                  record_selector:
                    type: RecordSelector
                    extractor:
                      type: DpathExtractor
                      field_path:
                        - data
                  paginator:
                    type: DefaultPaginator
                    page_token_option:
                      type: RequestOption
                      inject_into: request_parameter
                      field_name: offset
                    page_size_option:
                      type: RequestOption
                      field_name: limit
                      inject_into: request_parameter
                    pagination_strategy:
                      type: CursorPagination
                      page_size: 50
                      cursor_value: '{{ response.get("next", {}) }}'
                      stop_condition: '{{ not response.get("next", {}) }}'
                incremental_sync:
                  type: DatetimeBasedCursor
                  cursor_field: updatedAt
                  cursor_datetime_formats:
                    - '%s'
                  datetime_format: '%s'
                  start_datetime:
                    type: MinMaxDatetime
                    datetime: '{{ config[''start_date''] }}'
                    datetime_format: '%Y-%m-%dT%H:%M:%SZ'
                  start_time_option:
                    type: RequestOption
                    field_name: updated_at_start
                    inject_into: request_parameter
                  end_datetime:
                    type: MinMaxDatetime
                    datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
                    datetime_format: '%Y-%m-%dT%H:%M:%SZ'
                  step: PT100S
                  cursor_granularity: PT1S
  - type: DeclarativeStream
    name: notes
    primary_key:
      - id
    retriever:
      type: SimpleRetriever
      requester:
        type: HttpRequester
        url_base: https://api.sandbox.lever.co/v1
        path: opportunities/{{ stream_partition.opportunity_id }}/notes
        http_method: GET
        request_parameters: {}
        request_headers: {}
        authenticator:
          type: BasicHttpAuthenticator
          password: '{{ config[''password''] }}'
          username: '{{ config[''username''] }}'
        request_body_json: {}
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
      paginator:
        type: DefaultPaginator
        page_token_option:
          type: RequestOption
          inject_into: request_parameter
          field_name: offset
        page_size_option:
          type: RequestOption
          field_name: limit
          inject_into: request_parameter
        pagination_strategy:
          type: CursorPagination
          page_size: 50
          cursor_value: '{{ response.get("next", {}) }}'
          stop_condition: '{{ not response.get("next", {}) }}'
      partition_router:
        - type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: opportunity_id
              stream:
                type: DeclarativeStream
                name: opportunities
                primary_key:
                  - id
                schema_loader:
                  type: InlineSchemaLoader
                  schema:
                    $schema: http://json-schema.org/draft-07/schema#
                    additionalProperties: true
                    properties: {}
                    type: object
                retriever:
                  type: SimpleRetriever
                  requester:
                    type: HttpRequester
                    url_base: https://api.sandbox.lever.co/v1
                    path: opportunities
                    http_method: GET
                    request_parameters:
                      include: followers
                      confidentiality: all
                    request_headers: {}
                    authenticator:
                      type: BasicHttpAuthenticator
                      password: '{{ config[''password''] }}'
                      username: '{{ config[''username''] }}'
                    request_body_json: {}
                  record_selector:
                    type: RecordSelector
                    extractor:
                      type: DpathExtractor
                      field_path:
                        - data
                  paginator:
                    type: DefaultPaginator
                    page_token_option:
                      type: RequestOption
                      inject_into: request_parameter
                      field_name: offset
                    page_size_option:
                      type: RequestOption
                      field_name: limit
                      inject_into: request_parameter
                    pagination_strategy:
                      type: CursorPagination
                      page_size: 50
                      cursor_value: '{{ response.get("next", {}) }}'
                      stop_condition: '{{ not response.get("next", {}) }}'
                incremental_sync:
                  type: DatetimeBasedCursor
                  cursor_field: updatedAt
                  cursor_datetime_formats:
                    - '%s'
                  datetime_format: '%s'
                  start_datetime:
                    type: MinMaxDatetime
                    datetime: '{{ config[''start_date''] }}'
                    datetime_format: '%Y-%m-%dT%H:%M:%SZ'
                  start_time_option:
                    type: RequestOption
                    field_name: updated_at_start
                    inject_into: request_parameter
                  end_datetime:
                    type: MinMaxDatetime
                    datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
                    datetime_format: '%Y-%m-%dT%H:%M:%SZ'
                  step: PT100S
                  cursor_granularity: PT1S
  - type: DeclarativeStream
    name: offers
    primary_key:
      - id
    retriever:
      type: SimpleRetriever
      requester:
        type: HttpRequester
        url_base: https://api.sandbox.lever.co/v1
        path: opportunities/{{ stream_partition.opportunity_id }}/offers
        http_method: GET
        request_parameters: {}
        request_headers: {}
        authenticator:
          type: BasicHttpAuthenticator
          password: '{{ config[''password''] }}'
          username: '{{ config[''username''] }}'
        request_body_json: {}
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
      paginator:
        type: DefaultPaginator
        page_token_option:
          type: RequestOption
          inject_into: request_parameter
          field_name: offset
        page_size_option:
          type: RequestOption
          field_name: limit
          inject_into: request_parameter
        pagination_strategy:
          type: CursorPagination
          page_size: 50
          cursor_value: '{{ response.get("next", {}) }}'
          stop_condition: '{{ not response.get("next", {}) }}'
      partition_router:
        - type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: opportunity_id
              stream:
                type: DeclarativeStream
                name: opportunities
                primary_key:
                  - id
                schema_loader:
                  type: InlineSchemaLoader
                  schema:
                    $schema: http://json-schema.org/draft-07/schema#
                    additionalProperties: true
                    properties: {}
                    type: object
                retriever:
                  type: SimpleRetriever
                  requester:
                    type: HttpRequester
                    url_base: https://api.sandbox.lever.co/v1
                    path: opportunities
                    http_method: GET
                    request_parameters:
                      include: followers
                      confidentiality: all
                    request_headers: {}
                    authenticator:
                      type: BasicHttpAuthenticator
                      password: '{{ config[''password''] }}'
                      username: '{{ config[''username''] }}'
                    request_body_json: {}
                  record_selector:
                    type: RecordSelector
                    extractor:
                      type: DpathExtractor
                      field_path:
                        - data
                  paginator:
                    type: DefaultPaginator
                    page_token_option:
                      type: RequestOption
                      inject_into: request_parameter
                      field_name: offset
                    page_size_option:
                      type: RequestOption
                      field_name: limit
                      inject_into: request_parameter
                    pagination_strategy:
                      type: CursorPagination
                      page_size: 50
                      cursor_value: '{{ response.get("next", {}) }}'
                      stop_condition: '{{ not response.get("next", {}) }}'
                incremental_sync:
                  type: DatetimeBasedCursor
                  cursor_field: updatedAt
                  cursor_datetime_formats:
                    - '%s'
                  datetime_format: '%s'
                  start_datetime:
                    type: MinMaxDatetime
                    datetime: '{{ config[''start_date''] }}'
                    datetime_format: '%Y-%m-%dT%H:%M:%SZ'
                  start_time_option:
                    type: RequestOption
                    field_name: updated_at_start
                    inject_into: request_parameter
                  end_datetime:
                    type: MinMaxDatetime
                    datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
                    datetime_format: '%Y-%m-%dT%H:%M:%SZ'
                  step: PT100S
                  cursor_granularity: PT1S
  - type: DeclarativeStream
    name: referrals
    primary_key:
      - id
    retriever:
      type: SimpleRetriever
      requester:
        type: HttpRequester
        url_base: https://api.sandbox.lever.co/v1
        path: opportunities/{{ stream_partition.opportunity_id }}/referrals
        http_method: GET
        request_parameters: {}
        request_headers: {}
        authenticator:
          type: BasicHttpAuthenticator
          password: '{{ config[''password''] }}'
          username: '{{ config[''username''] }}'
        request_body_json: {}
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
      paginator:
        type: DefaultPaginator
        page_token_option:
          type: RequestOption
          inject_into: request_parameter
          field_name: offset
        page_size_option:
          type: RequestOption
          field_name: limit
          inject_into: request_parameter
        pagination_strategy:
          type: CursorPagination
          page_size: 50
          cursor_value: '{{ response.get("next", {}) }}'
          stop_condition: '{{ not response.get("next", {}) }}'
      partition_router:
        - type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: opportunity_id
              stream:
                type: DeclarativeStream
                name: opportunities
                primary_key:
                  - id
                schema_loader:
                  type: InlineSchemaLoader
                  schema:
                    $schema: http://json-schema.org/draft-07/schema#
                    additionalProperties: true
                    properties: {}
                    type: object
                retriever:
                  type: SimpleRetriever
                  requester:
                    type: HttpRequester
                    url_base: https://api.sandbox.lever.co/v1
                    path: opportunities
                    http_method: GET
                    request_parameters:
                      include: followers
                      confidentiality: all
                    request_headers: {}
                    authenticator:
                      type: BasicHttpAuthenticator
                      password: '{{ config[''password''] }}'
                      username: '{{ config[''username''] }}'
                    request_body_json: {}
                  record_selector:
                    type: RecordSelector
                    extractor:
                      type: DpathExtractor
                      field_path:
                        - data
                  paginator:
                    type: DefaultPaginator
                    page_token_option:
                      type: RequestOption
                      inject_into: request_parameter
                      field_name: offset
                    page_size_option:
                      type: RequestOption
                      field_name: limit
                      inject_into: request_parameter
                    pagination_strategy:
                      type: CursorPagination
                      page_size: 50
                      cursor_value: '{{ response.get("next", {}) }}'
                      stop_condition: '{{ not response.get("next", {}) }}'
                incremental_sync:
                  type: DatetimeBasedCursor
                  cursor_field: updatedAt
                  cursor_datetime_formats:
                    - '%s'
                  datetime_format: '%s'
                  start_datetime:
                    type: MinMaxDatetime
                    datetime: '{{ config[''start_date''] }}'
                    datetime_format: '%Y-%m-%dT%H:%M:%SZ'
                  start_time_option:
                    type: RequestOption
                    field_name: updated_at_start
                    inject_into: request_parameter
                  end_datetime:
                    type: MinMaxDatetime
                    datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
                    datetime_format: '%Y-%m-%dT%H:%M:%SZ'
                  step: PT100S
                  cursor_granularity: PT1S

spec:
  documentation_url: https://example.org
  type: Spec
  connection_specification:
    $schema: http://json-schema.org/draft-07/schema#
    type: object
    additionalProperties: true
    required:
      - start_date
      - username
    properties:
      start_date:
        type: string
        title: Start date
        format: date-time
        pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$
        order: 0
      username:
        type: string
        title: Username
        order: 1
      password:
        type: string
        title: Password
        always_show: true
        airbyte_secret: true
        order: 2
