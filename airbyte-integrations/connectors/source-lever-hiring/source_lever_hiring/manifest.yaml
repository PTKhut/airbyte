version: 0.50.2
type: DeclarativeSource

check:
  type: CheckStream
  stream_names:
    - users

definitions:
  selector:
    type: RecordSelector
    extractor:
      type: DpathExtractor
      field_path:
        - data
  paginator:
    type: DefaultPaginator
    page_token_option:
      type: RequestOption
      inject_into: request_parameter
      field_name: offset
    page_size_option:
      type: RequestOption
      field_name: limit
      inject_into: request_parameter
    pagination_strategy:
      type: CursorPagination
      page_size: 50
      cursor_value: '{{ response.get("next", {}) }}'
      stop_condition: '{{ not response.get("next", {}) }}'
  incremental_sync:
    type: DatetimeBasedCursor
    cursor_field: updatedAt
    cursor_datetime_formats:
      - '%s'
    datetime_format: '%s'
    start_datetime:
      type: MinMaxDatetime
      datetime: '{{ config[''start_date''] }}'
      datetime_format: '%Y-%m-%dT%H:%M:%SZ'
    start_time_option:
      type: RequestOption
      field_name: updated_at_start
      inject_into: request_parameter
    end_datetime:
      type: MinMaxDatetime
      datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
      datetime_format: '%Y-%m-%dT%H:%M:%SZ'
    step: PT100S
    cursor_granularity: PT1S
  opportunity_id_partition_router:
    - type: SubstreamPartitionRouter
      parent_stream_configs:
        - type: ParentStreamConfig
          parent_key: id
          partition_field: opportunity_id
          stream:
            $ref: "#/definitions/opportunities_stream"
  basic_authenticator:
    type: BasicHttpAuthenticator
    password: null
    username: "{{ config['credentials']['api_key']  }}"
  oauth2_authenticator:
    type: OAuthAuthenticator
    token_refresh_endpoint: https://{{ "sandbox-lever.auth0.com/" if config['environment'] == "Sandbox" else "auth.lever.co/" }}oauth/token
    client_id: "{{ config['credentials']['client_id'] }}"
    client_secret: "{{ config['credentials']['client_secret'] }}"
    refresh_token: "{{ config['credentials']['refresh_token'] }}"
    grant_type: refresh_token
  requester:
    type: HttpRequester
    url_base: https://api.{{ "sandbox." if config['environment'] == "Sandbox" }}lever.co/
    http_method: GET
    request_headers: {}
    authenticator:
      class_name: source_lever_hiring.components.AuthenticatorLeverHiring
      basic_auth: "#/definitions/basic_authenticator"
      oauth2: "#/definitions/oauth2_authenticator"
    request_body_json: {}
  opportunity_child_stream:
    type: DeclarativeStream
    primary_key: id
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        path: opportunities/{{ stream_partition.opportunity_id }}/{{ parameters.name }}
      record_selector:
        $ref: "#/definitions/selector"
      paginator:
        $ref: "#/definitions/paginator"
      partition_router:
        $ref: "#/definitions/opportunity_id_partition_router"
  opportunities_stream:
    type: DeclarativeStream
    name: opportunities
    primary_key: id
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        request_parameters:
          include: followers
          confidentiality: all
        path: opportunities
      record_selector:
        $ref: "#/definitions/selector"
      paginator:
        $ref: "#/definitions/paginator"
    incremental_sync:
      $ref: "#/definitions/incremental_sync"
  users_stream:
    type: DeclarativeStream
    name: users
    primary_key: id
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        path: users
        request_parameters:
          includeDeactivated: 'True'
      record_selector:
        $ref: "#/definitions/selector"
      paginator:
        $ref: "#/definitions/paginator"
  applications_stream:
    $ref: "#/definitions/opportunity_child_stream"
    name: applications
  interviews_stream:
    $ref: "#/definitions/opportunity_child_stream"
    name: interviews
  notes_stream:
    $ref: "#/definitions/opportunity_child_stream"
    name: notes
  offers_stream:
    $ref: "#/definitions/opportunity_child_stream"
    name: offers
  referrals_stream:
    $ref: "#/definitions/opportunity_child_stream"
    name: referrals

streams:
  - "#/definitions/opportunities_stream"
  - "#/definitions/users_stream"
  - "#/definitions/applications_stream"
  - "#/definitions/interviews_stream"
  - "#/definitions/notes_stream"
  - "#/definitions/offers_stream"
  - "#/definitions/referrals_stream"

spec:
  documentation_url: https://docs.airbyte.com/integrations/sources/lever-hiring
  changelog_url: https://docs.airbyte.com/integrations/sources/lever-hiring#changelog
  type: Spec
  connection_specification:
    $schema: http://json-schema.org/draft-07/schema#
    type: object
    additionalProperties: true
    required:
      - start_date
    properties:
      start_date:
        type: string
        title: Start Date
        description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. Note that it will be used only in the following incremental streams: comments, commits, and issues."
        examples: ["2021-03-01T00:00:00Z"]
        format: date-time
        pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$
        order: 0
      environment:
        order: 1
        type: string
        title: Environment
        description: The environment in which you'd like to replicate data for Lever. This is used to determine which Lever API endpoint to use.
        default: Sandbox
        enum:
          - Production
          - Sandbox
      credentials:
        order: 2
        title: Authentication Mechanism
        description: Choose how to authenticate to Lever Hiring.
        type: object
        oneOf:
          - type: object
            title: Authenticate via Lever (OAuth)
            required:
              - refresh_token
            properties:
              auth_type:
                type: string
                const: Client
                order: 0
              client_id:
                title: Client ID
                type: string
                description: The Client ID of your Lever Hiring developer application.
              client_secret:
                title: Client Secret
                type: string
                description: The Client Secret of your Lever Hiring developer application.
                airbyte_secret: true
              refresh_token:
                type: string
                title: Refresh Token
                description: The token for obtaining new access token.
                airbyte_secret: true
          - type: object
            title: Authenticate via Lever (Api Key)
            required:
              - api_key
            properties:
              auth_type:
                type: string
                const: Api Key
                order: 0
              api_key:
                title: Api key
                type: string
                description: The Api Key of your Lever Hiring account.
                airbyte_secret: true
                order: 1
  advanced_auth:
    auth_flow_type: oauth2.0
    predicate_key:
      - credentials
      - auth_type
    predicate_value: Client
    oauth_config_specification:
      oauth_user_input_from_connector_config_specification:
        type: object
        properties:
          environment:
            type: string
            path_in_connector_config:
              - environment
      complete_oauth_output_specification:
        type: object
        additionalProperties: false
        properties:
          refresh_token:
            type: string
            path_in_connector_config:
              - credentials
              - refresh_token
      complete_oauth_server_input_specification:
        type: object
        additionalProperties: false
        properties:
          client_id:
            type: string
          client_secret:
            type: string
      complete_oauth_server_output_specification:
        type: object
        additionalProperties: false
        properties:
          client_id:
            type: string
            path_in_connector_config:
              - credentials
              - client_id
          client_secret:
            type: string
            path_in_connector_config:
              - credentials
              - client_secret
